#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –º–æ–¥—É–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Agent Portal –Ω–∞ GitHub
echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Agent Portal –Ω–∞ GitHub..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
if [ ! -d ".git" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –≤ –∫–æ—Ä–Ω–µ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
    echo "–°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: git clone https://github.com/cy-real-del/agent-portal.git"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫..."
mkdir -p frontend/src/{components/{layout,filters,map,properties,complexes,selection,stats},pages,hooks,services,utils,types,assets}
mkdir -p backend/src/{controllers,models,routes,middleware,services,utils}
mkdir -p database/{migrations,seeds}
mkdir -p shared/{types,constants}
mkdir -p docs

echo "üìÑ –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

# Frontend package.json
cat > frontend/package.json << 'EOF'
{
  "name": "agent-portal-frontend",
  "private": true,
  "version": "1.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "tsc && vite build",
    "preview": "vite preview",
    "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
    "type-check": "tsc --noEmit"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.20.0",
    "@tanstack/react-query": "^5.8.0",
    "axios": "^1.6.0",
    "leaflet": "^1.9.4",
    "react-leaflet": "^4.2.1"
  },
  "devDependencies": {
    "@types/react": "^18.2.37",
    "@types/react-dom": "^18.2.15",
    "@types/leaflet": "^1.9.8",
    "@typescript-eslint/eslint-plugin": "^6.10.0",
    "@typescript-eslint/parser": "^6.10.0",
    "@vitejs/plugin-react": "^4.1.0",
    "autoprefixer": "^10.4.16",
    "eslint": "^8.53.0",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.4",
    "postcss": "^8.4.31",
    "tailwindcss": "^3.3.5",
    "@tailwindcss/forms": "^0.5.7",
    "@tailwindcss/typography": "^0.5.10",
    "typescript": "^5.2.2",
    "vite": "^4.5.0"
  }
}
EOF

# Vite config
cat > frontend/vite.config.ts << 'EOF'
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'
import path from 'path'

export default defineConfig({
  plugins: [react()],
  resolve: {
    alias: {
      '@': path.resolve(__dirname, './src'),
      '@components': path.resolve(__dirname, './src/components'),
      '@pages': path.resolve(__dirname, './src/pages'),
      '@hooks': path.resolve(__dirname, './src/hooks'),
      '@services': path.resolve(__dirname, './src/services'),
      '@utils': path.resolve(__dirname, './src/utils'),
      '@types': path.resolve(__dirname, './src/types'),
      '@assets': path.resolve(__dirname, './src/assets')
    }
  },
  server: {
    port: 3000,
    open: true
  },
  build: {
    outDir: 'dist',
    sourcemap: true
  }
})
EOF

# Tailwind config
cat > frontend/tailwind.config.js << 'EOF'
/** @type {import('tailwindcss').Config} */
export default {
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {
      colors: {
        cyprus: {
          50: '#fdf9f3',
          100: '#f5f1eb',
          200: '#e8ddd0',
          300: '#d9c6a8',
          400: '#c5a880',
          500: '#b8956b',
          600: '#a87f59',
          700: '#8b6749',
          800: '#70533e',
          900: '#5a4334',
        }
      },
      fontFamily: {
        sans: ['Inter', 'ui-sans-serif', 'system-ui'],
      }
    },
  },
  plugins: [
    require('@tailwindcss/forms'),
    require('@tailwindcss/typography'),
  ],
}
EOF

# PostCSS config
cat > frontend/postcss.config.js << 'EOF'
export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}
EOF

# TypeScript config –¥–ª—è frontend
cat > frontend/tsconfig.json << 'EOF'
{
  "compilerOptions": {
    "target": "ES2020",
    "useDefineForClassFields": true,
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    "skipLibCheck": true,
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "jsx": "react-jsx",
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true,
    "baseUrl": ".",
    "paths": {
      "@/*": ["./src/*"],
      "@components/*": ["./src/components/*"],
      "@pages/*": ["./src/pages/*"],
      "@hooks/*": ["./src/hooks/*"],
      "@services/*": ["./src/services/*"],
      "@utils/*": ["./src/utils/*"],
      "@types/*": ["./src/types/*"],
      "@assets/*": ["./src/assets/*"]
    }
  },
  "include": ["src"],
  "references": [{ "path": "./tsconfig.node.json" }]
}
EOF

# Index.html –¥–ª—è frontend
cat > frontend/index.html << 'EOF'
<!doctype html>
<html lang="ru">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Agent Portal - CyprusProperties Pro</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
  </body>
</html>
EOF

# Main.tsx
cat > frontend/src/main.tsx << 'EOF'
import React from 'react'
import ReactDOM from 'react-dom/client'
import App from './App.tsx'
import './index.css'

ReactDOM.createRoot(document.getElementById('root')!).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
)
EOF

# Index.css
cat > frontend/src/index.css << 'EOF'
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html {
    font-family: 'Inter', ui-sans-serif, system-ui;
  }
}

@layer components {
  .btn-primary {
    @apply bg-cyprus-400 text-white px-4 py-2 rounded-lg hover:bg-cyprus-500 transition-colors;
  }
  
  .btn-secondary {
    @apply bg-gray-100 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-200 transition-colors;
  }
  
  .card {
    @apply bg-white rounded-lg shadow-md p-4;
  }
}

/* Leaflet custom styles */
.leaflet-container {
  height: 100%;
  width: 100%;
  border-radius: 8px;
}

.custom-div-icon {
  background: none;
  border: none;
}

.complex-marker {
  background: #C5A880;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  border: 3px solid white;
  box-shadow: 0 2px 6px rgba(0,0,0,0.3);
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-weight: bold;
  font-size: 12px;
}

.property-marker {
  background: #10B981;
  width: 25px;
  height: 25px;
  border-radius: 50%;
  border: 2px solid white;
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);
}

.property-marker.reserved {
  background: #F59E0B;
}

.property-marker.sold {
  background: #EF4444;
}
EOF

# –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π package.json
cat > package.json << 'EOF'
{
  "name": "agent-portal",
  "version": "1.0.0",
  "description": "Web portal for AI agents management and interaction",
  "scripts": {
    "dev": "cd frontend && npm run dev",
    "build": "cd frontend && npm run build",
    "preview": "cd frontend && npm run preview",
    "install:frontend": "cd frontend && npm install",
    "install:backend": "cd backend && npm install",
    "install:all": "npm run install:frontend && npm run install:backend"
  },
  "keywords": ["ai", "agents", "chatbot", "react", "nodejs", "typescript"],
  "author": "cy-real-del",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/cy-real-del/agent-portal.git"
  }
}
EOF

# –û–±–Ω–æ–≤–ª—è–µ–º .gitignore
cat > .gitignore << 'EOF'
# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Production builds
dist/
build/

# Environment files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# IDE files
.vscode/
.idea/
*.swp
*.swo

# OS files
.DS_Store
Thumbs.db

# Logs
logs
*.log

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage
coverage/

# Database
*.sqlite
*.sqlite3
*.db

# Temporary folders
tmp/
temp/

# Build artifacts
*.tsbuildinfo
EOF

# –°–æ–∑–¥–∞–µ–º placeholder —Ñ–∞–π–ª—ã –¥–ª—è –±—É–¥—É—â–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ placeholder —Ñ–∞–π–ª–æ–≤..."

# Types
cat > frontend/src/types/index.ts << 'EOF'
// Placeholder - –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω –ø–æ–ª–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏
export interface Property {
  id: string;
  title: string;
  type: 'apartment' | 'villa' | 'studio' | 'house';
  status: 'available' | 'reserved' | 'sold';
  price: number;
  // ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã
}

export interface Complex {
  id: string;
  name: string;
  // ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã
}

export type ViewMode = 'properties' | 'complexes';
EOF

# Basic App component
cat > frontend/src/App.tsx << 'EOF'
import React from 'react';

const App: React.FC = () => {
  return (
    <div className="min-h-screen bg-gray-50">
      <header className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 py-4">
          <div className="flex items-center gap-3">
            <div className="w-8 h-8 bg-cyprus-400 rounded"></div>
            <h1 className="text-xl font-bold text-gray-900">Agent Portal</h1>
          </div>
        </div>
      </header>
      
      <main className="max-w-7xl mx-auto px-4 py-6">
        <div className="card">
          <h2 className="text-2xl font-bold mb-4">üöÄ Agent Portal</h2>
          <p className="text-gray-600 mb-4">
            –ú–æ–¥—É–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –ø–æ—Ä—Ç–∞–ª–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...
          </p>
          <p className="text-sm text-gray-500">
            –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –∫–æ–º–º–∏—Ç–∞—Ö.
          </p>
          
          <div className="mt-6">
            <a 
              href="/cyprus-properties-demo.html" 
              className="btn-primary inline-block"
            >
              –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ–º–æ CyprusProperties
            </a>
          </div>
        </div>
      </main>
    </div>
  );
};

export default App;
EOF

# README update
cat > README.md << 'EOF'
# Agent Portal ü§ñ

–í–µ–±-–ø–æ—Ä—Ç–∞–ª –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è, —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å AI –∞–≥–µ–Ω—Ç–∞–º–∏.

## üéØ –°—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞

- ‚úÖ **–î–µ–º–æ –≥–æ—Ç–æ–≤–æ**: [CyprusProperties Demo](https://cy-real-del.github.io/agent-portal/cyprus-properties-demo.html)
- üöß **–ú–æ–¥—É–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è**: –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ

## üöÄ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏

- **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞–º–∏**: –°–æ–∑–¥–∞–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ AI –∞–≥–µ–Ω—Ç–æ–≤
- **Real-time —á–∞—Ç**: –û–±—â–µ–Ω–∏–µ —Å –∞–≥–µ–Ω—Ç–∞–º–∏
- **–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–∞—Ä—Ç—ã**: –î–ª—è –ø–æ—Ä—Ç–∞–ª–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
- **–ê–Ω–∞–ª–∏—Ç–∏–∫–∞**: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

## üõ† –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫

### Frontend
- React 18 + TypeScript
- Vite + Tailwind CSS
- Leaflet –¥–ª—è –∫–∞—Ä—Ç
- React Query

### Backend (–ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è)
- Node.js + Express + TypeScript
- PostgreSQL + Prisma
- Socket.io –¥–ª—è real-time

## üèó –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

```
agent-portal/
‚îú‚îÄ‚îÄ cyprus-properties-demo.html  # –†–∞–±–æ—á–µ–µ –¥–µ–º–æ
‚îú‚îÄ‚îÄ frontend/                    # –ú–æ–¥—É–ª—å–Ω–∞—è React –≤–µ—Ä—Å–∏—è
‚îÇ   ‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ components/         # React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ hooks/              # Custom hooks
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ types/              # TypeScript —Ç–∏–ø—ã
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ ...
‚îú‚îÄ‚îÄ backend/                     # API —Å–µ—Ä–≤–µ—Ä (–ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è)
‚îî‚îÄ‚îÄ docs/                       # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
```

## üö¶ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

### –ó–∞–ø—É—Å–∫ –¥–µ–º–æ
–û—Ç–∫—Ä–æ–π—Ç–µ: https://cy-real-del.github.io/agent-portal/cyprus-properties-demo.html

### –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –º–æ–¥—É–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏
```bash
# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
git clone https://github.com/cy-real-del/agent-portal.git
cd agent-portal

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
npm run install:frontend

# –ó–∞–ø—É—Å–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
npm run dev
```

## üìã –ü–ª–∞–Ω—ã —Ä–∞–∑–≤–∏—Ç–∏—è

- [x] –î–µ–º–æ –ø–æ—Ä—Ç–∞–ª–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
- [x] –ë–∞–∑–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –º–æ–¥—É–ª—å–Ω–æ–≥–æ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
- [ ] –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å—é
- [ ] –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç –≤ –º–æ–¥—É–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é
- [ ] Backend API
- [ ] AI –∞–≥–µ–Ω—Ç—ã –¥–ª—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
- [ ] –°–∏—Å—Ç–µ–º–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
- [ ] –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

## ü§ù –£—á–∞—Å—Ç–∏–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ

1. –§–æ—Ä–∫–Ω–∏—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
2. –°–æ–∑–¥–∞–π—Ç–µ –≤–µ—Ç–∫—É: `git checkout -b feature/new-feature`
3. –ó–∞—Ñ–∏–∫—Å–∏—Ä—É–π—Ç–µ: `git commit -m 'Add new feature'`
4. –û—Ç–ø—Ä–∞–≤—å—Ç–µ: `git push origin feature/new-feature`
5. –°–æ–∑–¥–∞–π—Ç–µ Pull Request

---

‚≠ê –ü–æ—Å—Ç–∞–≤—å—Ç–µ –∑–≤–µ–∑–¥—É, –µ—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç –ø–æ–ª–µ–∑–µ–Ω!
EOF

echo "‚úÖ –§–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã!"
echo ""
echo "üöÄ –¢–µ–ø–µ—Ä—å –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "git add ."
echo "git status  # –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –¥–æ–±–∞–≤–∏–ª–æ—Å—å"
echo "git commit -m 'Add modular React structure with TypeScript'"
echo "git push origin main"
echo ""
echo "üì± –ü–æ—Å–ª–µ push –≤–∞—à —Å–∞–π—Ç –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω:"
echo "- –î–µ–º–æ: https://cy-real-del.github.io/agent-portal/cyprus-properties-demo.html"
echo "- –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è: https://cy-real-del.github.io/agent-portal/frontend/dist/"
echo ""
echo "üéâ –ì–æ—Ç–æ–≤–æ! –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!"
EOF